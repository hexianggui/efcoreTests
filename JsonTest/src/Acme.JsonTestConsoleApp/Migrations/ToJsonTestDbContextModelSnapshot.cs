// <auto-generated />
using System;
using Acme.JsonTestConsoleApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace Acme.JsonTestConsoleApp.Migrations
{
    [DbContext(typeof(ToJsonTestDbContext))]
    partial class ToJsonTestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Acme.JsonTestConsoleApp.Entities.ToJsonTestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ToJsonTestEntity", (string)null);
                });

            modelBuilder.Entity("Acme.JsonTestConsoleApp.Entities.ToJsonTestEntity", b =>
                {
                    b.OwnsMany("Acme.JsonTestConsoleApp.Entities.JosnItem", "JsonItems", b1 =>
                        {
                            b1.Property<Guid>("ToJsonTestEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Code")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("TimeTest")
                                .HasColumnType("datetime2");

                            b1.HasKey("ToJsonTestEntityId", "Id");

                            b1.ToTable("ToJsonTestEntity");

                            b1.ToJson("JsonItems");

                            b1.WithOwner()
                                .HasForeignKey("ToJsonTestEntityId");
                        });

                    b.Navigation("JsonItems");
                });
#pragma warning restore 612, 618
        }
    }
}
